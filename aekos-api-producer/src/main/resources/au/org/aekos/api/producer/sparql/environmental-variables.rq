PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX aekos: <http://www.aekos.org.au/ontology/1.0.0#>
PREFIX api: <http://www.aekos.org.au/api/1.0#>

# Builds an environmental variable dataset
CONSTRUCT {
  ?locationVisitEntity a api:LocationVisit .
  ?locationVisitEntity api:decimalLongitude ?decimalLongitude .
  ?locationVisitEntity api:decimalLatitude ?decimalLatitude .
  ?locationVisitEntity api:geodeticDatum ?geodeticDatum .
  ?locationVisitEntity api:locationID ?locationID .
  ?locationVisitEntity api:eventDate ?eventDate .
  ?locationVisitEntity api:year ?year .
  ?locationVisitEntity api:month ?month .
  # landscape vars
  ?locationVisitEntity api:landscapeVars ?landscapeTraitEntity .
  ?landscapeTraitEntity api:name ?landscapeTraitName .
  ?landscapeTraitEntity api:value ?landscapeTraitValue .
  ?landscapeTraitEntity api:units ?landscapeTraitUnits .
  # no units vars
  ?locationVisitEntity api:noUnitsVars ?noUnitsTraitEntity .
  ?noUnitsTraitEntity api:name ?noUnitsTraitName .
  ?noUnitsTraitEntity api:value ?noUnitsTraitValue .
  ?noUnitsTraitEntity api:units ?noUnits .
  # soil vars
  ?locationVisitEntity api:soilVars ?soilTraitEntity .
  ?soilTraitEntity api:name ?soilTraitName .
  ?soilTraitEntity api:value ?soilTraitValue .
  ?soilTraitEntity api:units ?soilTraitUnits .
  # disturbance evidence
  ?locationVisitEntity api:disturbanceEvidenceVars ?disturbanceEvidenceCoverEntity .
  ?disturbanceEvidenceCoverEntity api:name ?disturbanceEvidenceCoverName .
  ?disturbanceEvidenceCoverEntity api:value ?disturbanceEvidenceCoverValue .
  ?disturbanceEvidenceCoverEntity api:units ?disturbanceEvidenceCoverUnits .
}
WHERE {
  GRAPH ?g {
    ?slsg a ?slsgType .
    VALUES ?slsgType {
      aekos:STUDYLOCATIONSUBGRAPH
    }
    # location ID
    ?slsg aekos:aekoslocationidentifier ?locationID .
    # location
    OPTIONAL {
      ?slsg aekos:studylocation/aekos:location/aekos:sampledpoint [
        aekos:computedlongitude ?decimalLongitude1 ;
        aekos:computedlatitude ?decimalLatitude1
      ] .
    }
    OPTIONAL {
      ?slsg aekos:centroidcoordinates [
        aekos:computedlongitude ?decimalLongitude2 ;
        aekos:computedlatitude ?decimalLatitude2
      ] .
    }
    BIND(COALESCE(?decimalLongitude1, ?decimalLongitude2) AS ?decimalLongitude) .
    BIND(COALESCE(?decimalLatitude1, ?decimalLatitude2) AS ?decimalLatitude) .
    BIND('GDA94' as ?geodeticDatum) .
    # empty string for variables without units
    BIND ('' as ?noUnits) .
    ?slsg aekos:views/rdfs:member ?vv .
    # synthetic entity ID for the Study Location Visit
    BIND (UUID() as ?locationVisitEntity) .
    # eventDate
    OPTIONAL {
      ?vv aekos:observeditems/rdfs:member ?su1 .
      ?su1 a ?su1Type .
      VALUES ?su1Type {
        aekos:SAMPLINGUNIT
        aekos:SAMPLINGUNITVIS
        aekos:SAMPLINGUNITRSV
        aekos:SAMPLINGUNITATRIPLEX
        aekos:SAMPLINGUNITRABBITWARRENS
      } .
      ?su1 aekos:temporality/aekos:has_start ?eventDateTemp1 .
    }
    OPTIONAL {
      ?vv aekos:observeditems/rdfs:member ?sa1 .
      ?sa1 a ?sa1Type .
      VALUES ?sa1Type {
        aekos:SAMPLEDAREA
        aekos:SAMPLEDAREAACSS
  #      aekos:SAMPLEDAREAVIS # Not in the data
      } .
      ?sa1 aekos:temporality/aekos:has_start ?eventDateTemp2 .
    }
    OPTIONAL {
      ?vv aekos:observeditems/rdfs:member ?oi .
      ?oi a ?oiType .
      VALUES ?oiType {
        aekos:LANDSCAPE
        aekos:LANDSCAPEVIS
        aekos:SOIL
        aekos:SOILVIS
        aekos:SOILAP
        aekos:FIREEVIDENCE
        aekos:DISTURBANCEEVIDENCE
        aekos:DISTURBANCEEVIDENCE_KOONAMORE
        aekos:DISTURBANCEEVIDENCE_KOONAMORE_DETAILS
        aekos:DISTURBANCEEVIDENCERSV
        aekos:DISTURBANCEEVIDENCEVIS
        aekos:EROSIONEVIDENCE
        aekos:SOILSAMPLE # work around for TERN_AUSPLOTS and TERN_TREND
      }
      ?oi aekos:temporality/aekos:has_start ?eventDateTemp3 .
    }
    BIND (COALESCE(?eventDateTemp1, ?eventDateTemp2, ?eventDateTemp3) AS ?eventDateTemp)
    BIND (CONCAT(str(year(?eventDateTemp)),"-",str(month(?eventDateTemp)),"-",str(day(?eventDateTemp))) as ?eventDate) .
    # month
    BIND (month(?eventDateTemp) as ?month) .
    # year
    BIND (year(?eventDateTemp) as ?year) .
  }
}