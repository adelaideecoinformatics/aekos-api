PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX aekos: <http://www.aekos.org.au/ontology/1.0.0#>
PREFIX api: <http://www.aekos.org.au/api/1.0#>

# Gets the easy part of the Darwin Core + traits dataset (just the 1:1 bits)
SELECT
	?id
	?datasetName 
	?decimalLongitude
	?decimalLatitude
	?geodeticDatum
	?locationID
	?locationName
	?scientificName
	?taxonRemarks
	?individualCount
	?eventDate
	?year
	?month
	?samplingProtocol
WHERE { GRAPH ?g {
   ?og a ?ogType .
   VALUES ?ogType {
#      aekos:ORGANISMGROUP # Left out on purpose (as instructed by Matt)
    aekos:INDIVIDUALORGANISM
    aekos:SPECIESORGANISMGROUP
  }
  # scientificName
  OPTIONAL {?og aekos:determinedspeciesconcept/aekos:species/aekos:name ?determinedSpeciesNameValue . } #OFF4dewnr_bdbsa
  OPTIONAL {?og aekos:determinedspeciesconcept/aekos:species/aekos:namewithoutauthorship ?determinedSpeciesNameWOAuthorshipValue . }
  OPTIONAL {?og aekos:determinedspeciesconcept/aekos:species/aekos:title ?determinedSpeciesTitleValue . }
  OPTIONAL {?og aekos:determinedspeciesconcept/aekos:species/aekos:namewithauthorship ?determinedSpeciesNameWAuthorshipValue . }
  OPTIONAL {?og aekos:fieldspeciesconcept/aekos:species/aekos:name ?fieldSpeciesNameValue . }
  OPTIONAL {?og aekos:fieldspeciesconcept/aekos:species/aekos:namewithoutauthorship ?fieldSpeciesNameWOAuthorshipValue . }
  OPTIONAL {?og aekos:fieldspeciesconcept/aekos:species/aekos:namewithauthorship ?fieldSpeciesNameWAuthorshipValue . }
  BIND (COALESCE(
        ?determinedSpeciesNameWAuthorshipValue,
        ?fieldSpeciesNameWAuthorshipValue,
        ?determinedSpeciesNameValue, #OFF4dewnr_bdbsa
        ?determinedSpeciesNameWOAuthorshipValue,
        ?determinedSpeciesTitleValue,
        ?fieldSpeciesNameValue,
        ?fieldSpeciesNameWOAuthorshipValue) as ?scientificNameTemp) .
  BIND (REPLACE(REPLACE(?scientificNameTemp,"^\\s*",""), "\\s*$","") as ?scientificName) .
  # taxonRemarks
  OPTIONAL {?og aekos:fieldspeciesconcept/aekos:commentary ?fieldSpeciesConceptCommentary . }
  OPTIONAL {?og aekos:determinedspeciesconcept/aekos:commentary ?determinedSpeciesConceptCommentary . }
  BIND (COALESCE(
        ?determinedSpeciesConceptCommentary,
        ?fieldSpeciesConceptCommentary) as ?taxonRemarksTemp) .
  # make ?taxonRemarks empty if we already have a scientificName so we don't get output in the CONSTRUCT
  # note: assumes that ?nothing isn't bound to anything
  BIND (IF(BOUND(?scientificName), ?nothing, REPLACE(REPLACE(?taxonRemarksTemp,"^\\s*",""), "\\s*$","")) as ?taxonRemarks) .
  FILTER(bound(?scientificName) || bound(?taxonRemarks)) .
  # get StudyLocationSubgraph ref
  ?og ^rdfs:member/^aekos:observeditems/^rdfs:member/^aekos:views ?slsg .
  # study location IDs
  ?slsg aekos:aekoslocationidentifier ?locationID .
  ?slsg aekos:aekossurveyidentifier ?samplingProtocol .
  ?slsg aekos:studylocationidentifier ?locationName .
  # location
  OPTIONAL {
    ?slsg aekos:studylocation/aekos:location/aekos:sampledpoint [
      aekos:computedlongitude ?decimalLongitude1 ;
      aekos:computedlatitude ?decimalLatitude1
    ] .
  }
  OPTIONAL {
    ?slsg aekos:centroidcoordinates [
      aekos:computedlongitude ?decimalLongitude2 ;
      aekos:computedlatitude ?decimalLatitude2
    ] .
  }
  BIND(COALESCE(?decimalLongitude1, ?decimalLongitude2) AS ?decimalLongitude) .
  BIND(COALESCE(?decimalLatitude1, ?decimalLatitude2) AS ?decimalLatitude) .
  BIND('GDA94' as ?geodeticDatum) .
  # individualCount
  OPTIONAL {?og aekos:absoluteabundance/aekos:value ?absoluteAbundance . }
  BIND (COALESCE(?absoluteAbundance, 1) as ?individualCount) .
  # eventDate
  OPTIONAL {
    ?og aekos:temporality/aekos:has_start ?eventDateTemp1 .
  }
  OPTIONAL {
    ?og aekos:method/aekos:duration/aekos:has_start ?eventDateTemp2 .
  }
  BIND(COALESCE(?eventDateTemp1, ?eventDateTemp2) AS ?eventDateTemp)
  BIND (CONCAT(str(year(?eventDateTemp)),"-",str(month(?eventDateTemp)),"-",str(day(?eventDateTemp))) as ?eventDate) .
  # month
  BIND (month(?eventDateTemp) as ?month) .
  # year
  BIND (year(?eventDateTemp) as ?year) .
  # make an ID for the CONSTRUCT clause
  BIND (STRUUID() as ?id) .
  
  # fake dataset name FIXME
  BIND ("FIXME" as ?datasetName) .
}}